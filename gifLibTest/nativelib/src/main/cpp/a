# For more information about using CMake with Android Studio, read the
# documentation: https://d.android.com/studio/projects/add-native-code.html

# Sets the minimum version of CMake required to build the native library.

cmake_minimum_required(VERSION 3.18.1)

file(GLOB_RECURSE GIF_LIB ${CMAKE_SOURCE_DIR}/frame_squence/giflib/*.*)
file(GLOB_RECURSE FRAME_SQUENCE ${CMAKE_SOURCE_DIR}/frame_squence/*.*)

# Declares and names the project.

project("giflib_521")

# Creates and names a library, sets it as either STATIC
# or SHARED, and provides the relative paths to its source code.
# You can define multiple libraries, and CMake builds them for you.
# Gradle automatically packages shared libraries with your APK.

add_library( # Sets the name of the library.
             giflib_521

             # Sets the library as a shared library.
             SHARED

             # Provides a relative path to your source file(s).
             ${GIF_LIB}
             ${FRAME_SQUENCE}
        giflib_521.cpp


#        frame_squence/*.h

#        frame_squence/giflib/gif_lib.h
#        frame_squence/BitmapDecoderJNI.cpp
#        frame_squence/FrameSequence.cpp
#        frame_squence/FrameSequenceJNI.cpp
#        frame_squence/FrameSequence_gif.cpp
#        frame_squence/JNIHelpers.cpp
#        frame_squence/Registry.cpp
#        frame_squence/Stream.cpp
        )

#include_directories(
#        frame_squence/giflib/gif_lib.h
#        frame_squence/FrameSequenceJNI.h
#        frame_squence/FrameSequence_gif.h
#        frame_squence/FrameSequence.h
#        frame_squence/giflib/gif_hash.h
#        frame_squence/giflib/gif_lib_private.h
#)

# Searches for a specified prebuilt library and stores the path as a
# variable. Because CMake includes system libraries in the search path by
# default, you only need to specify the name of the public NDK library
# you want to add. CMake verifies that the library exists before
# completing its build.

find_library( # Sets the name of the path variable.
              log-lib

              # Specifies the name of the NDK library that
              # you want CMake to locate.
              log
#        APPEND LIBS
        jnigraphics
        android
        GLESv2)

# Specifies libraries CMake should link to your target library. You
# can link multiple libraries, such as libraries you define in this
# build script, prebuilt third-party libraries, or system libraries.

target_link_libraries( # Specifies the target library.
                       giflib_521

                       # Links the target library to the log library
                       # included in the NDK.
                       ${log-lib}
        jnigraphics
        android
        GLESv2
        )